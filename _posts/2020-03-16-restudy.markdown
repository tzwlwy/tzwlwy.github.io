---
layout: post
category: "复习"
title:  "面试复习"
header-img: "img/in-post/post-bg-unix-linux.jpg"
tags:
    - 复习
---
<pre><code>
1. python 常用数据结构有哪些？请简要介绍一下。
答：Python中常见的数据结构可以统称为容器（container）。序列（如列表和元组）、映射（如字典）以及集合（set）是三类主要的容器。所以，Python常用数据结构有：列表、字典、元组、集合。

关于这个问题，一般也会顺带问：Python中哪些数据类型是可变的，哪些是不可变的？
答：可变/不可变是针对该对象所指向的内存中的值是否可变来判断的。如可变类型的数据类型有：列表、字典、集合；不可变类型的数据类型有：字符串、元组、数字。



2. 简要描述 Python 中单引号、双引号、三引号的区别。


答：首先，单引号和双引号在使用时基本上没有什么区别；


唯一需要注意的是：

当字符串中有单引号时，最好在外面使用双引号；

当有双引号时，最好在外面使用单引号；

三引号一般不常用，除了用来做注释外，还可以用来打印多行字符串。特殊用途，是可以打印多行字符串。


3. 如何在一个 function 里面设置一个全局的变量？


答：全局变量是指定义在函数外部的变量。全局变量的作用域为全局。

局部变量是指定义在函数内部的变量。局部变量的作用域为函数内，除了函数就无效了。


例如：

num = 100
def func():
    global num
    num = 200
    num += 100
    print(num)

func()
print(num)

300
300




总结：如果要在函数中给全局变量赋值，需要用global关键字声明。



4. Python 里面如何拷贝一个对象？（赋值、浅拷贝、深拷贝的区别）

答：赋值是将一个对象的地址赋值给一个变量，让变量指向该地址（旧瓶装旧酒）

浅拷贝就是对引用的拷贝

深拷贝是对对象的资源的拷贝

举例说明：

（1）



a = ['hello',[1,2,3]]
b = a[:]

print([id(x) for x in a])
print([id(x) for x in b])

a[0] = 'world'
a[1].append(4)
print(a)
print(b)

[34305224, 33841800]
[34305224, 33841800]
['world', [1, 2, 3, 4]]
['hello', [1, 2, 3, 4]]


浅拷贝是在另一块地址中创


建一个新的变量或容器，但是容器内的元素的地址均是源对象的元素的地址的拷贝。也就是说新的容器中指向了旧的元素（新瓶装旧酒）。



（2）



from copy import deepcopy
a = ['hello',[1,2,3]]
b = deepcopy(a)

print([id(x) for x in a])
print([id(x) for x in b])

a[0] = 'world'
a[1].append(4)
print(a)
print(b)


[30766280, 30785352]
[30766280, 31727688]
['world', [1, 2, 3, 4]]
['hello', [1, 2, 3]]


深拷贝是在另一块地址中创建一个新的变量或容器，同时容器内的元素的地址也是新开辟的，仅仅是值相同而已，是完全的副本。也就是说（新瓶装新酒）。



总 结：



（1）当对象为不可变类型时，不论是赋值，浅拷贝还是深拷贝，那么改变其中一个值时，另一个都是不会跟着变化的。



（2）当对象为可变对象时，如果是赋值和浅拷贝，那么改变其中任意一个值，那么另一个会跟着发生变化的；如果是深拷贝，是不会跟着发生改变的。



5. 如果 custname 字符串的内容为 utf-8 的字符，如何将 custname 的内容转为 gb18030 的字符串？



答：先将custname编码格式转换为unicode，再转换为gb18030。即custname.decode（‘utf-8’）.encode（‘gb18030’）。



6. 请写出一段 Python 代码实现删除一个 list 里面的重复元素。



答：方法（一）利用集合set的特性，元素是非重复的



a = [1,2,3,4,5,2,3]

def fun1(a):
    a = list(set(a))
    print(a)

fun1(a)

[1, 2, 3, 4, 5]


方法（二）利用字典的fromkeys来自动过滤重复值



a = [1,2,3,4,5,2,3]

def fun1(a):
    b = {}
    b = b.fromkeys(a)
    c = list(b.keys())
    print(c)

c = fun1(a)


7. 这两个参数是什么意思：*args，**kwargs？



答：首先，*args和**kwargs并不是必须这样写，只有前面的*和**才是必须的，你可以写成*var和**vars。



其次，*args和**kwargs主要用于函数定义，你可以将不定量的参数传递给一个函数。



其中，*args是用来发送一个非键值对的可变数量的参数列表给一个函数；



**kwargs则允许将不定长度的键值对，作为参数传递给一个函数，如果你想要在一个函数里处理带名字的参数，你应该使用**kwargs。



8. 统计如下 list 单词及其出现次数。



a=['apple', 'banana', 'apple', 'tomato', 'orange', 'apple', 'banana', 'watermeton']



答：我能想到的最简单的方法就是用collection库



from collections import Counter

a = ['apple', 'banana', 'apple', 'tomato', 'orange', 'apple', 'banana', 'watermeton']
b = Counter(a)
print(b)

Counter({'apple': 3, 'banana': 2, 'tomato': 1, 'orange': 1, 'watermeton': 1})


9. 给列表中的字典排序：假设有如下 list 对象



alist=[{"name":"a", "age":20}, {"name":"b", "age":30}, {"name":"c", "age":25}]



将 alist 中的元素按照 age 从大到小排序。



答：利用list的内置函数sort来进行排序



alist=[{"name":"a", "age":20}, {"name":"b", "age":30}, {"name":"c", "age":25}]
alist.sort(key=lambda x:x['age'])
print(alist)

[{'name': 'a', 'age': 20}, {'name': 'c', 'age': 25}, {'name': 'b', 'age': 30}]


10. 写出下列代码的运行结果



a = 1
def fun(a):
  a = 2
fun(a)
print(a)



a = []
def fun(a):
  a.append(1)
fun(a)
print(a)



class Person:
    name = 'Lily'

p1 = Person()
p2 = Person()
p1.name = 'Bob'
print(p1.name)
print(p2.name)
print(Person.name)



答：第一段代码的运行结果为：1

第二段代码的运行结果为：[1]

第三段代码的运行结果为：



Bob

Lily

Lily


11. 假设有如下两个 list：a = ['a', 'b', 'c', 'd', 'e']，b = [1, 2, 3, 4, 5]，将 a 中的元素作为 key，b 中元素作为 value，将 a，b 合并为字典。

答：



a = ['a','b','c','d','e']
b = [1,2,3,4,5]
c = dict(zip(a,b))
print(c)

总结


通过做这份真实的面试题，我发现自己对一些知识掌握的比较模糊，基础知识还有待进一步的，导致对一些问题回答的还不够全面。


最后，我觉得这也是一种学Python的好方法呀，可以不断检验自己的学习情况，督促自己不断进步。
</code></pre>